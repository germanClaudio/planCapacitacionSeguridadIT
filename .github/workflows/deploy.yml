name: Deploy with protected codes

on:
  push:
    branches: [ master ]
  workflow_dispatch:  # Permite ejecución manual

# Permisos necesarios
permissions:
  contents: write
  pages: write
  id-token: write

# Configuración de concurrencia
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  
  deploy:
    name: Build and deploy
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.ACCESS_TOKEN }}
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Create encoded data file
      run: |
        # Crear directorio si no existe
        mkdir -p generated
        
        # Obtener los códigos del secret y convertirlos a array JavaScript
        CODES_ARRAY='${{ secrets.CODES_ARRAY }}'
        
        # Crear archivo JavaScript con los códigos ofuscados
        cat > generated/codes.js << EOF
        // Archivo generado automáticamente - NO EDITAR MANUALMENTE
        const CODES_DATA = "$CODES_ARRAY";
        export function getCodes() {
          return CODES_DATA.split(',');
        }
        EOF
        
        # También crear versión JSON
        echo '[' > generated/codes.json
        echo \"$CODES_ARRAY\" | sed 's/,/","/g' | sed 's/^/"/' | sed 's/$/"/' >> generated/codes.json
        echo ']' >> generated/codes.json
        
        # Mostrar confirmación (sin mostrar los códigos)
        echo "✓ Archivo de códigos generado exitosamente"
        echo "✓ Número de códigos procesados: $(echo \"$CODES_ARRAY\" | tr ',' '\n' | wc -l)"
    
    - name: Setup Pages
      uses: actions/configure-pages@v5
      
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        path: '.'

    - name: Deploy to GitHub Pages
      id: deployment
      #uses: peaceiris/actions-gh-pages@v3
      uses: actions/deploy-pages@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}